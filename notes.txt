=begin  
class Board 
    def initialize(player1, player2)
        @board = [' ',' ',' ',' ',' ',' ',' ',' ',' ']
        @player1 = player1
        @player2 = player2 
    end

    def reset_the_board
        @board = [' ',' ',' ',' ',' ',' ',' ',' ',' ']
    end 

    def displaying_the_tictactoe_board
        puts "#{board[0]} | #{board[1]}" | #{board[2]}"
        puts "#{board[3]} | #{board[4]}" | #{board[5]}"

    win_conditions = [
        [0, 1, 2]
        [3, 4, 5]
        ....
        [0, 4, 8]
    ]
end
end
#


class Cell
    pos_x
    pos_y
    player
end

@board = []

display:

display_board = 
@board.each do |cell|
    if !cell
        display_board << 



def display_board(state) --> check if you can input symbol on board
....

state.each_with_index do |

# check if horizontally same
row.count("X") == 3

# check if vertically same
[board[0][index], board[1][index], board[2][index]].count("X") == 3

# check if diagonally same
[board[0][0], board[1][1], board[2][2]].count("X") == 3
[board[0][2], board[1][1], board[2][0]].count("X") == 3






[' ',' ',' ',' ',' ',' ',' ',' ',' ']

[[" ", " ", " "], [" ", " ", " "], [" ", " ", " "]]

    win_combinations = [  
        [0, 1, 2]
        [3, 4, 5]
        [6, 7, 8]
        [0, 4, 8]
        [6, 4, 2]
        [2, 5, 8]
        [1, 4, 7]
        [0, 3, 6]
    ]

    test for this => if player1 has win_combinations == winner 
                  => if player2 has win_combinations == winner 